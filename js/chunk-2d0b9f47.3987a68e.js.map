{"version":3,"sources":["webpack:///./src/views/Signup.vue","webpack:///./src/views/Signup.vue?7763","webpack:///./src/views/Signup.vue?f45c"],"names":["class","for","submit","type","submitForm","rule","emailRules","signData","emailval","placeholder","nameRules","nameval","autocomplete","passwordRules","passwordval","repetitionRules","repetitionval","name","components","ValidateInput","ValidateForm","setup","router","message","min","length","max","isRepeatFn","newUserdata","email","nickName","password","then","setTimeout","push","catch","err","console","log","render"],"mappings":"kJAESA,MAAM,Q,EACT,eAAsC,SAA/BA,MAAM,cAAa,QAAI,G,GAG3BA,MAAM,Q,EACT,eAAgE,SAAzDC,IAAI,wBAAwBD,MAAM,cAAa,MAAE,G,GAGrDA,MAAM,Q,EACT,eAAgE,SAAzDC,IAAI,wBAAwBD,MAAM,cAAa,MAAE,G,GAGrDA,MAAM,Q,EACT,eAAkE,SAA3DC,IAAI,wBAAwBD,MAAM,cAAa,QAAI,G,2HAd9D,eAoBgB,QAHHE,OAAM,gBACf,IAA8F,CAA9F,eAA8F,UAAtFC,KAAK,SAASH,MAAM,wBAAyB,QAAK,oCAAU,EAAAI,YAAA,EAAAA,cAAA,GAAU,eAAE,W,wBAjBlF,IAGM,CAHN,eAGM,MAHN,EAGM,CAFJ,EACA,eAAkH,GAAjGC,KAAM,EAAAC,W,WAAqB,EAAAC,SAASC,S,qCAAT,EAAAD,SAASC,SAAQ,GAAEL,KAAK,OAAOM,YAAY,W,gCAEzF,eAGM,MAHN,EAGM,CAFJ,EACA,eAAiI,GAAhHJ,KAAM,EAAAK,U,WAAoB,EAAAH,SAASI,Q,qCAAT,EAAAJ,SAASI,QAAO,GAAER,KAAK,OAAOM,YAAY,QAAQG,aAAa,O,gCAE5G,eAGM,MAHN,EAGM,CAFJ,EACA,eAA6I,GAA5HP,KAAM,EAAAQ,c,WAAwB,EAAAN,SAASO,Y,qCAAT,EAAAP,SAASO,YAAW,GAAEX,KAAK,WAAWM,YAAY,QAAQG,aAAa,O,gCAExH,eAGM,MAHN,EAGM,CAFJ,EACA,eAAmJ,GAAlIP,KAAM,EAAAU,gB,WAA0B,EAAAR,SAASS,c,qCAAT,EAAAT,SAASS,cAAa,GAAEb,KAAK,WAAWM,YAAY,UAAUG,aAAa,O,wGCRnH,iBAAgB,CAC7BK,KAAM,SACNC,WAAY,CACVC,cAAa,OACbC,aAAY,QAEdC,MAAA,WACE,IAAMC,EAAS,iBAETf,EAAW,eAAS,CACxBC,SAAU,GACVG,QAAS,GACTG,YAAa,GACbE,cAAe,KAGXV,EAAmB,CACvB,CAAEH,KAAM,WAAYoB,QAAS,QAC7B,CAAEpB,KAAM,QAASoB,QAAS,WAC1B,CAAEpB,KAAM,QAASoB,QAAS,iBAGtBb,EAAkB,CACtB,CAAEP,KAAM,WAAYoB,QAAS,QAC7B,CACEpB,KAAM,QACNqB,IAAK,CACHD,QAAS,oBACTE,OAAQ,GAEVC,IAAK,CACHH,QAAS,oBACTE,OAAQ,KAKRZ,EAAsB,CAC1B,CAAEV,KAAM,WAAYoB,QAAS,QAC7B,CACEpB,KAAM,QACNqB,IAAK,CACHD,QAAS,oBACTE,OAAQ,GAEVC,IAAK,CACHH,QAAS,qBACTE,OAAQ,MAKRV,EAAwB,CAC5B,CAAEZ,KAAM,WAAYoB,QAAS,QAC7B,CACEpB,KAAM,QACNqB,IAAK,CACHD,QAAS,oBACTE,OAAQ,GAEVC,IAAK,CACHH,QAAS,qBACTE,OAAQ,KAGZ,CACEtB,KAAM,SACNwB,WAAY,WACV,OAAOpB,EAASO,cAAgBP,EAASS,eAE3CO,QAAS,SAKPnB,EAAa,WACjB,IAAMwB,EAAc,CAClBC,MAAOtB,EAASC,SAChBsB,SAAUvB,EAASI,QACnBoB,SAAUxB,EAASO,aAGrB,eAAK,SAAUc,GAAaI,MAAK,WAC/B,eAAQ,iBAAkB,WAC1BC,YAAW,WACTX,EAAOY,KAAK,YACX,QACFC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,OAIhB,MAAO,CAAE7B,SAAQ,EAAED,WAAU,EAAEO,cAAa,EAAEH,UAAS,EAAEK,gBAAe,EAAEX,WAAU,MCjGxF,EAAOmC,OAASA,EAED","file":"js/chunk-2d0b9f47.3987a68e.js","sourcesContent":["<template>\r\n  <validate-form>\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">邮箱地址</label>\r\n      <validate-input :rule=\"emailRules\" v-model=\"signData.emailval\" type=\"text\" placeholder=\"请输入邮箱地址\"></validate-input>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputPassword1\" class=\"form-label\">昵称</label>\r\n      <validate-input :rule=\"nameRules\" v-model=\"signData.nameval\" type=\"text\" placeholder=\"请输入昵称\" autocomplete=\"tel\"></validate-input>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputPassword1\" class=\"form-label\">密码</label>\r\n      <validate-input :rule=\"passwordRules\" v-model=\"signData.passwordval\" type=\"password\" placeholder=\"请输入密码\" autocomplete=\"tel\"></validate-input>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputPassword1\" class=\"form-label\">重复密码</label>\r\n      <validate-input :rule=\"repetitionRules\" v-model=\"signData.repetitionval\" type=\"password\" placeholder=\"请再次输入密码\" autocomplete=\"tel\"></validate-input>\r\n    </div>\r\n    <template #submit>\r\n      <button type=\"submit\" class=\"btn btn-primary w-100\" @click.prevent=\"submitForm\">注册新用户</button>\r\n    </template>\r\n  </validate-form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport ValidateInput, { Rule } from '../components/ValidateInput.vue'\r\nimport ValidateForm from '../components/ValidateForm.vue'\r\nimport Message from '../components/createMessage'\r\nimport { post } from '../axiosDefaults'\r\n\r\nexport default defineComponent({\r\n  name: 'Signup',\r\n  components: {\r\n    ValidateInput,\r\n    ValidateForm\r\n  },\r\n  setup () {\r\n    const router = useRouter()\r\n    // 表单数据\r\n    const signData = reactive({\r\n      emailval: '',\r\n      nameval: '',\r\n      passwordval: '',\r\n      repetitionval: ''\r\n    })\r\n    // 定义邮箱的验证类型数组\r\n    const emailRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      { type: 'email', message: '邮箱格式不正确' },\r\n      { type: 'range', message: '请输入6-12位邮箱格式' }\r\n    ]\r\n    // 昵称的验证类型数组\r\n    const nameRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的昵称至少包括2位，不能含有空格',\r\n          length: 2\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括6位，不能含有空格',\r\n          length: 6\r\n        }\r\n      }\r\n    ]\r\n    // 定义密码的验证类型数组\r\n    const passwordRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的密码至少包括六位，不能含有空格',\r\n          length: 6\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括12位，不能含有空格',\r\n          length: 12\r\n        }\r\n      }\r\n    ]\r\n    // 重复密码的验证类型数组\r\n    const repetitionRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的密码至少包括六位，不能含有空格',\r\n          length: 6\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括12位，不能含有空格',\r\n          length: 12\r\n        }\r\n      },\r\n      {\r\n        type: 'repeat', // 重复验证逻辑\r\n        isRepeatFn: () => {\r\n          return signData.passwordval === signData.repetitionval\r\n        },\r\n        message: '密码不同'\r\n      }\r\n    ]\r\n\r\n    // 点击发送注册表单\r\n    const submitForm = () => {\r\n      const newUserdata = {\r\n        email: signData.emailval,\r\n        nickName: signData.nameval,\r\n        password: signData.passwordval\r\n      }\r\n\r\n      post('/users', newUserdata).then(() => {\r\n        Message('注册成功, 正在跳转登录页面', 'success')\r\n        setTimeout(() => {\r\n          router.push('/login')\r\n        }, 2000)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n    return { signData, emailRules, passwordRules, nameRules, repetitionRules, submitForm }\r\n  }\r\n})\r\n</script>\r\n","\r\nimport { defineComponent, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport ValidateInput, { Rule } from '../components/ValidateInput.vue'\r\nimport ValidateForm from '../components/ValidateForm.vue'\r\nimport Message from '../components/createMessage'\r\nimport { post } from '../axiosDefaults'\r\n\r\nexport default defineComponent({\r\n  name: 'Signup',\r\n  components: {\r\n    ValidateInput,\r\n    ValidateForm\r\n  },\r\n  setup () {\r\n    const router = useRouter()\r\n    // 表单数据\r\n    const signData = reactive({\r\n      emailval: '',\r\n      nameval: '',\r\n      passwordval: '',\r\n      repetitionval: ''\r\n    })\r\n    // 定义邮箱的验证类型数组\r\n    const emailRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      { type: 'email', message: '邮箱格式不正确' },\r\n      { type: 'range', message: '请输入6-12位邮箱格式' }\r\n    ]\r\n    // 昵称的验证类型数组\r\n    const nameRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的昵称至少包括2位，不能含有空格',\r\n          length: 2\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括6位，不能含有空格',\r\n          length: 6\r\n        }\r\n      }\r\n    ]\r\n    // 定义密码的验证类型数组\r\n    const passwordRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的密码至少包括六位，不能含有空格',\r\n          length: 6\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括12位，不能含有空格',\r\n          length: 12\r\n        }\r\n      }\r\n    ]\r\n    // 重复密码的验证类型数组\r\n    const repetitionRules: Rule = [\r\n      { type: 'required', message: '不能为空' },\r\n      {\r\n        type: 'range',\r\n        min: {\r\n          message: '你的密码至少包括六位，不能含有空格',\r\n          length: 6\r\n        },\r\n        max: {\r\n          message: '你的密码最多包括12位，不能含有空格',\r\n          length: 12\r\n        }\r\n      },\r\n      {\r\n        type: 'repeat', // 重复验证逻辑\r\n        isRepeatFn: () => {\r\n          return signData.passwordval === signData.repetitionval\r\n        },\r\n        message: '密码不同'\r\n      }\r\n    ]\r\n\r\n    // 点击发送注册表单\r\n    const submitForm = () => {\r\n      const newUserdata = {\r\n        email: signData.emailval,\r\n        nickName: signData.nameval,\r\n        password: signData.passwordval\r\n      }\r\n\r\n      post('/users', newUserdata).then(() => {\r\n        Message('注册成功, 正在跳转登录页面', 'success')\r\n        setTimeout(() => {\r\n          router.push('/login')\r\n        }, 2000)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n    return { signData, emailRules, passwordRules, nameRules, repetitionRules, submitForm }\r\n  }\r\n})\r\n","import { render } from \"./Signup.vue?vue&type=template&id=74af048a\"\nimport script from \"./Signup.vue?vue&type=script&lang=ts\"\nexport * from \"./Signup.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}