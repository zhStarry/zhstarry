{"version":3,"sources":["webpack:///./src/components/ColumnDetail.vue","webpack:///./src/components/PostList.vue","webpack:///./src/components/PostList.vue?6cc2","webpack:///./src/components/PostList.vue?2b11","webpack:///./src/components/ColumnDetail.vue?cabc","webpack:///./src/components/ColumnDetail.vue?f7dc"],"names":["class","src","columnData","avatar","fitUrl","alt","title","description","list","postsData","isLastPage","loadMorePage","item","key","_id","to","style","image","url","excerpt","createdAt","name","props","required","type","Array","render","components","PostList","setup","route","store","id","params","totalVal","state","posts","total","currentPageComputed","loadedColumns","value","useLoadMore","currentPage","pageSize","dispatch","Math","ceil","selectColumn","getters","getColumnById","getPostsByCid"],"mappings":"wJACOA,MAAM,mC,GACJA,MAAM,8D,GACJA,MAAM,qB,GAGNA,MAAM,S,GAENA,MAAM,c,GAIRA,MAAM,uC,mEAXsC,EAAU,Y,iBAA7D,eAeM,MAfN,EAeM,CAdJ,eAQM,MARN,EAQM,CAPJ,eAEM,MAFN,EAEM,CADJ,eAAiH,OAA3GC,IAAK,EAAAC,WAAWC,QAAU,EAAAD,WAAWC,OAAOC,OAASC,IAAK,EAAAH,WAAWI,MAAON,MAAM,0B,wBAE1F,eAGM,MAHN,EAGM,CAFF,eAA6B,yBAAvB,EAAAE,WAAWI,OAAK,GACxB,eAAoD,IAApD,EAAoD,eAA5B,EAAAJ,WAAWK,aAAW,OAGlD,eAAyC,GAA7BC,KAAM,EAAAC,WAAS,iBAC3B,eAEM,MAFN,EAEM,CAD8E,EAAAC,W,wCAApF,eAA2G,U,MAAnGV,MAAM,yCAA0C,QAAK,oBAAE,EAAAW,cAAA,EAAAA,gBAAA,KAAiC,S,eAC1F,IACN,gBAAG,EAAAD,YAAU,M,yCCZNV,MAAM,a,GAIJA,MAAM,+B,SACJA,MAAM,S,GAKPA,MAAM,c,qEAZP,EAAI,M,iBAAf,eAeM,U,mBAdJ,eAaM,2BAb0C,EAAAQ,KAARI,I,iBAAxC,eAaM,OAbDZ,MAAM,sBAA4Ca,IAAKD,EAAKE,K,CAC/D,eAWM,MAXN,EAWM,CAVJ,eAEc,GAFAC,GAAE,eAAiBH,EAAKE,IAAOE,MAAA,2BAA+BhB,MAAM,c,yBAChF,IAAuB,CAAvB,eAAuB,yBAAjBY,EAAKN,OAAK,K,kBAElB,eAKM,MALN,EAKM,CAJsBM,EAAKK,OAA+B,kBAAfL,EAAKK,O,iBAApD,eAEM,MAFN,EAEM,CADJ,eAAsE,OAAhEhB,IAAKW,EAAKK,MAAMC,IAAKlB,MAAM,mBAAoBK,IAAKO,EAAKN,O,+CAEjE,eAAsD,KAAlDN,MAAK,SAAYY,EAAKK,Q,eAAUL,EAAKO,SAAO,KAElD,eAAkD,OAAlD,EAAkD,eAAvBP,EAAKQ,WAAS,S,+BCTlC,qBAAgB,CAC7BC,KAAM,WACNC,MAAO,CACLd,KAAM,CACJe,UAAU,EACVC,KAAMC,UCNZ,EAAOC,OAAS,EAED,Q,gDCGA,iBAAgB,CAC7BL,KAAM,eACNM,WAAY,CACVC,SAAQ,GAEVC,MAAA,W,MACQC,EAAQ,iBACRC,EAAQ,iBACRC,EAAK,eAAIF,EAAMG,OAAOD,IAEtBE,EAAW,gBAAS,WAAM,OAAAH,EAAMI,MAAMC,MAAMC,SAC5CC,EAAsB,gBAAS,WAAM,OAAAP,EAAMI,MAAMC,MAAMG,cAAcP,EAAGQ,UACxE,EAA+B,OAAAC,EAAA,MAAY,iBAAkBP,EAAU,CAAEQ,aAAsC,QAAzB,EAAAJ,EAAoBE,aAAK,eAAEE,aAAc,GAAK,EAAGC,SAAU,EAAGX,GAAIA,EAAGQ,QAAzJ7B,EAAY,eAAED,EAAU,aAEhC,gBAAU,W,MACRqB,EAAMa,SAAS,gBAAiBZ,EAAGQ,OAC9BF,EAAoBE,OAASK,KAAKC,KAAKR,EAAoBE,MAAMH,MAAQ,KAAOC,EAAoBE,MAAME,aAC7GX,EAAMa,SAAS,iBAAkB,CAAEZ,GAAIA,EAAGQ,MAAOE,aAAsC,QAAzB,EAAAJ,EAAoBE,aAAK,eAAEE,cAAe,EAAGC,SAAU,OAIzH,IAAMzC,EAAa,gBAAS,WAC1B,IAAM6C,EAAehB,EAAMiB,QAAQC,cAAcjB,EAAGQ,OAIpD,OAHIO,GACF,eAAgBA,EAAc,IAAK,KAE9BA,KAEHtC,EAAY,gBAAS,WACzB,OAAOsB,EAAMiB,QAAQE,cAAclB,EAAGQ,UAExC,MAAO,CAAEtC,WAAU,EAAEO,UAAS,EAAEE,aAAY,EAAED,WAAU,MCpC5D,EAAOgB,OAASA,EAED","file":"js/chunk-2d0e6c85.a806b16f.js","sourcesContent":["<template>\r\n  <div class=\"column-detail-page w-75 mx-auto\" v-if=\"columnData\">\r\n    <div class=\"column-info row mb-4 border-bottom pb-4 align-items-center\">\r\n      <div class=\"col-3 text-center\">\r\n        <img :src=\"columnData.avatar && columnData.avatar.fitUrl\" :alt=\"columnData.title\" class=\"rounded-circle border \">\r\n      </div>\r\n      <div class=\"col-9\">\r\n          <h4>{{columnData.title}}</h4>\r\n        <p class=\"text-muted\">{{columnData.description}}</p>\r\n      </div>\r\n    </div>\r\n    <post-list :list=\"postsData\"></post-list>\r\n    <div class=\"d-flex justify-content-center w-100\">\r\n    <button class=\"btn btn-primary w-25 mx-auto mb-5 mt-2\" @click=\"loadMorePage\" v-if=\"!isLastPage\">点击</button>\r\n    </div>\r\n    {{!isLastPage}}\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, onMounted, ref } from 'vue'\r\nimport PostList from './PostList.vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { GlobalDataProps, ColumnProps } from '../store'\r\nimport { addColumnAvatar } from '../helps'\r\nimport { useLoadMore } from '../hooks/useLoadMore'\r\nexport default defineComponent({\r\n  name: 'ColumnDetail',\r\n  components: {\r\n    PostList\r\n  },\r\n  setup () {\r\n    const route = useRoute()\r\n    const store = useStore<GlobalDataProps>()\r\n    const id = ref(route.params.id)\r\n\r\n    const totalVal = computed(() => store.state.posts.total)\r\n    const currentPageComputed = computed(() => store.state.posts.loadedColumns[id.value as string])\r\n    const { loadMorePage, isLastPage } = useLoadMore('getColumnsPost', totalVal, { currentPage: currentPageComputed.value?.currentPage + 1 || 2, pageSize: 5, id: id.value as string })\r\n\r\n    onMounted(() => {\r\n      store.dispatch('getColumnsOne', id.value)\r\n      if (!currentPageComputed.value || Math.ceil(currentPageComputed.value.total / 5) !== currentPageComputed.value.currentPage) {\r\n        store.dispatch('getColumnsPost', { id: id.value, currentPage: currentPageComputed.value?.currentPage || 1, pageSize: 5 })\r\n      }\r\n    })\r\n\r\n    const columnData = computed(() => {\r\n      const selectColumn = store.getters.getColumnById(id.value) as ColumnProps | undefined\r\n      if (selectColumn) {\r\n        addColumnAvatar(selectColumn, 100, 100)\r\n      }\r\n      return selectColumn\r\n    })\r\n    const postsData = computed(() => {\r\n      return store.getters.getPostsByCid(id.value)\r\n    })\r\n    return { columnData, postsData, loadMorePage, isLastPage }\r\n  }\r\n})\r\n</script>\r\n","<template>\r\n  <div v-if=\"list\">\r\n    <div class=\"card mb-3 shadow-sm\" v-for=\"item in list\" :key=\"item._id\">\r\n      <div class=\"card-body\">\r\n        <router-link :to=\"`/postDetail/${item._id}`\" style=\"text-decoration: none;\" class=\"text-muted\">\r\n          <h4>{{item.title}}</h4>\r\n        </router-link>\r\n        <div class=\"row align-items-center my-3\">\r\n          <div class=\"col-4\" v-if=\"(item.image && typeof item.image !== 'string')\">\r\n            <img :src=\"item.image.url\" class=\"rounded-lg w-100\" :alt=\"item.title\">\r\n          </div>\r\n          <p :class=\"{'col-9': item.image}\">{{item.excerpt}}</p>\r\n        </div>\r\n        <span class=\"text-muted\">{{item.createdAt}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { PostProps } from '../store'\r\n\r\nexport default defineComponent({\r\n  name: 'PostList',\r\n  props: {\r\n    list: {\r\n      required: true,\r\n      type: Array as PropType<PostProps[]>\r\n    }\r\n  }\r\n})\r\n</script>\r\n","\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { PostProps } from '../store'\r\n\r\nexport default defineComponent({\r\n  name: 'PostList',\r\n  props: {\r\n    list: {\r\n      required: true,\r\n      type: Array as PropType<PostProps[]>\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./PostList.vue?vue&type=template&id=7f8a1086\"\nimport script from \"./PostList.vue?vue&type=script&lang=ts\"\nexport * from \"./PostList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, onMounted, ref } from 'vue'\r\nimport PostList from './PostList.vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { GlobalDataProps, ColumnProps } from '../store'\r\nimport { addColumnAvatar } from '../helps'\r\nimport { useLoadMore } from '../hooks/useLoadMore'\r\nexport default defineComponent({\r\n  name: 'ColumnDetail',\r\n  components: {\r\n    PostList\r\n  },\r\n  setup () {\r\n    const route = useRoute()\r\n    const store = useStore<GlobalDataProps>()\r\n    const id = ref(route.params.id)\r\n\r\n    const totalVal = computed(() => store.state.posts.total)\r\n    const currentPageComputed = computed(() => store.state.posts.loadedColumns[id.value as string])\r\n    const { loadMorePage, isLastPage } = useLoadMore('getColumnsPost', totalVal, { currentPage: currentPageComputed.value?.currentPage + 1 || 2, pageSize: 5, id: id.value as string })\r\n\r\n    onMounted(() => {\r\n      store.dispatch('getColumnsOne', id.value)\r\n      if (!currentPageComputed.value || Math.ceil(currentPageComputed.value.total / 5) !== currentPageComputed.value.currentPage) {\r\n        store.dispatch('getColumnsPost', { id: id.value, currentPage: currentPageComputed.value?.currentPage || 1, pageSize: 5 })\r\n      }\r\n    })\r\n\r\n    const columnData = computed(() => {\r\n      const selectColumn = store.getters.getColumnById(id.value) as ColumnProps | undefined\r\n      if (selectColumn) {\r\n        addColumnAvatar(selectColumn, 100, 100)\r\n      }\r\n      return selectColumn\r\n    })\r\n    const postsData = computed(() => {\r\n      return store.getters.getPostsByCid(id.value)\r\n    })\r\n    return { columnData, postsData, loadMorePage, isLastPage }\r\n  }\r\n})\r\n","import { render } from \"./ColumnDetail.vue?vue&type=template&id=2285f29d\"\nimport script from \"./ColumnDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./ColumnDetail.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}